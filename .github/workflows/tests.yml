# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
# docs: https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

name: ðŸ§ª Tests

on:
  workflow_dispatch: {}
  push:
    branches: [master, main]
    paths-ignore: ['**.md']
    tags-ignore: ['**']
  pull_request:
    paths-ignore: ['**.md']

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

jobs:
  git-leaks:
    name: Check for GitLeaks
    runs-on: ubuntu-latest
    steps:
      - {uses: actions/checkout@v4, with: {fetch-depth: 0}}
      - uses: gacts/gitleaks@v1

  lint-and-test:
    name: Test and lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - {uses: actions/setup-go@v5, with: {go-version-file: go.mod}}
      - run: go generate -skip readme ./...
      - uses: golangci/golangci-lint-action@v8
      - run: go test -race -covermode=atomic ./...

  build-app:
    name: Build the app
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix: # https://pkg.go.dev/internal/platform
        os: [linux, darwin, windows]
        arch: [amd64, arm64]
    needs: [lint-and-test]
    steps:
      - uses: actions/checkout@v4
      - {uses: gacts/github-slug@v1, id: slug}
      - id: values
        run: |
          echo "app-version=${{ steps.slug.outputs.version-semantic }}@${{ steps.slug.outputs.commit-hash-short }}" >> $GITHUB_OUTPUT
          echo "bin-name=tinifier-${{ matrix.os }}-${{ matrix.arch }}`[ ${{ matrix.os }} = 'windows' ] && echo '.exe'`" >> $GITHUB_OUTPUT
      - {uses: actions/setup-go@v5, with: {go-version-file: go.mod}}
      - run: go generate -skip readme ./...
      - env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
          LDFLAGS: -s -w -X gh.tarampamp.am/tinifier/v5/internal/version.version=${{ steps.values.outputs.app-version }}
        run: go build -trimpath -ldflags "$LDFLAGS" -o "./${{ steps.values.outputs.bin-name }}" ./cmd/tinifier/
      - uses: actions/upload-artifact@v4
        with:
          name: tinifier-${{ matrix.os }}-${{ matrix.arch }}
          path: ./${{ steps.values.outputs.bin-name }}
          if-no-files-found: error
          retention-days: 7

  build-docker-image:
    name: Build the docker image
    runs-on: ubuntu-latest
    needs: [lint-and-test]
    steps:
      - uses: actions/checkout@v4
      - {uses: gacts/github-slug@v1, id: slug}
      - uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          build-args: "APP_VERSION=${{ steps.slug.outputs.branch-name-slug }}@${{ steps.slug.outputs.commit-hash-short }}"
          push: false
          tags: app:local
