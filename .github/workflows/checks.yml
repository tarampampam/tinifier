name: Checks

on:
  push:
    branches:
      - master
    tags-ignore:
      - '**'
  pull_request:

jobs:
  gofmt:
    name: Run gofmt
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Run Gofmt
        working-directory: ./src
        run: test -z "$(gofmt -l .)"

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Run Unit tests
        working-directory: ./src
        run: go test . -v -race -coverprofile=coverage.txt -covermode=atomic

      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v1.0.0 # https://github.com/codecov/codecov-action
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./src/coverage.txt
          flags: unittests

  build:
    name: Build for ${{ matrix.os }} and execute
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        os: [linux, windows, darwin]
    needs: [gofmt, test]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13.x

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Build application
        env:
          GOOS: ${{ matrix.os }}
        working-directory: ./src
        run: go build -ldflags '-s -w' -o /tmp/tinifier .

      - name: Try to execute
        if: matrix.os == 'linux'
        run: /tmp/tinifier -V && /tmp/tinifier -h

  image:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: [gofmt, test]
    steps:
      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Build image
        run: docker build -t tinifier -f Dockerfile .

      - name: Try to execute
        run: docker run --rm tinifier -h
