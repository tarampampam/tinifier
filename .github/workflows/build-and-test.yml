name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  gofmt:
    name: Run gofmt
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Run Gofmt
        working-directory: ./src
        run: test -z "$(gofmt -l .)"

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Run Unit tests
        working-directory: ./src
        run: go test . -v -race -coverprofile=coverage.txt -covermode=atomic

      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v1.0.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./src/coverage.txt

  build:
    name: Build and execute
    runs-on: ubuntu-latest
    needs: [gofmt, test]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Build
        working-directory: ./src
        run: go build -ldflags="-s -w" -o /tmp/tinifier .

      - name: Try to execute
        run: /tmp/tinifier -V && /tmp/tinifier -h

  image:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: [gofmt, test]
    steps:
      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Build image
        run: docker build -t tinifier -f Dockerfile .

      - name: Try to execute
        run: docker run --rm tinifier -h

  build-for-release:
    name: Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: 386
            file: tinifier-linux-386
            upx: -7
          - os: linux
            arch: amd64
            file: tinifier-linux-amd64
            args: -7
          - os: windows
            arch: 386
            file: tinifier-win-386.exe
            args: -7
          - os: windows
            arch: amd64
            file: tinifier-win-amd64.exe
            args: -7
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Build
        working-directory: ./src
        env:
          LDFLAGS: '-s -w'
        run: GOOS='${{ matrix.os }}' GOARCH='${{ matrix.arch }}' go build -ldflags="$LDFLAGS" -o ./${{ matrix.file }} .

      - name: Compress binariy
        uses: svenstaro/upx-action@v1-release
        with:
          file: ./src/${{ matrix.file }}
          args: ${{ matrix.upx }}

      - name: Show results
        uses: actions/checkout@v1
        run: ls -l ./src
