name: Build and Test

on:
  push:
    branches:
      - master
  pull_request:

env:
  LDFLAGS: '-s -w'

jobs:
  gofmt:
    name: Run gofmt
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Run Gofmt
        working-directory: ./src
        run: test -z "$(gofmt -l .)"

  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Run Unit tests
        working-directory: ./src
        run: go test . -v -race -coverprofile=coverage.txt -covermode=atomic

      - name: Upload Coverage report to CodeCov
        uses: codecov/codecov-action@v1.0.0
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          file: ./src/coverage.txt

  build:
    name: Build and execute
    runs-on: ubuntu-latest
    needs: [gofmt, test]
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Build
        working-directory: ./src
        run: go build -ldflags="$LDFLAGS" -o /tmp/tinifier .

      - name: Try to execute
        run: /tmp/tinifier -V && /tmp/tinifier -h

  image:
    name: Build docker image
    runs-on: ubuntu-latest
    needs: [gofmt, test]
    steps:
      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Build image
        run: docker build -t tinifier -f Dockerfile .

      - name: Try to execute
        run: docker run --rm tinifier -h

  build-for-release:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.13

      - name: Check out code
        uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Build for linux (386)
        working-directory: ./src
        env:
          GOOS: linux
          GOARCH: 386
        run: go build -ldflags="$LDFLAGS" -o /tmp/build/tinifier-${GOOS}-${GOARCH} .

      - name: Build for linux (amd64)
        working-directory: ./src
        env:
          GOOS: linux
          GOARCH: amd64
        run: go build -ldflags="$LDFLAGS" -o /tmp/build/tinifier-${GOOS}-${GOARCH} .

      - name: Build for windows (386)
        working-directory: ./src
        env:
          GOOS: windows
          GOARCH: 386
        run: go build -ldflags="$LDFLAGS" -o /tmp/build/tinifier-${GOOS}-${GOARCH}.exe .

      - name: Build for windows (amd64)
        working-directory: ./src
        env:
          GOOS: windows
          GOARCH: amd64
        run: go build -ldflags="$LDFLAGS" -o /tmp/build/tinifier-${GOOS}-${GOARCH}.exe .

      - name: Pack binaries
        uses: tarampampam/upx-action@v1.0.0
        with:
          infile: /tmp/build/*
          upx_args: '-7'

      - name: Show results
        run: ls -l /tmp/build
